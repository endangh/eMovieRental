/*
 * DILARANG MENGHAPUS ATAU MENGEDIT COPYRIGHT INI.
 * 
 * Copyright 2008 echo.khannedy@gmail.com. 
 * All rights reserved.
 * 
 * Semua isi dalam file ini adalah hak milik dari echo.khannedy@gmail.com
 * Anda tak diperkenankan untuk menggunakan file atau mengubah file
 * ini kecuali anda tidak menghapus atau merubah lisence ini.
 * 
 * File ini dibuat menggunakan :
 * IDE        : NetBeans
 * NoteBook   : Acer Aspire 5920G
 * OS         : Windows Vista
 * Java       : Java 1.6
 * 
 */
package usu.rental.film.operator;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import usu.rental.film.data.exception.DataNotCompleteException;
import usu.rental.film.widget.Table;
import usu.rental.film.widget.TextArea;
import usu.rental.film.widget.TextBox;
import usu.rental.film.widget.table.TableModelOperatorNoPassword;
import usu.rental.film.widget.table.render.DefaultTableCellRender;
import usu.rental.film.widget.worker.WorkerAction;
import usu.rental.film.widget.worker.WorkerOperatorNoPassword;

/**
 *
 * @author  usu
 */
public class KirimPesan extends JPanel {

    private static final long serialVersionUID = -1;
    private TableModelOperatorNoPassword tableModel;

    /** Creates new form KirimPesan */
    public KirimPesan() {
        initVariables();
        initComponents();
        initFinal();
        initActions();
    }

    public void addActionListenerBatal(ActionListener l) {
        buttonBatal.addActionListener(l);
    }

    public void addActionListenerKirim(ActionListener l) {
        buttonKirim.addActionListener(l);
    }

    public TextBox getTextCari() {
        return textCari;
    }

    /**
     * 
     * @param connection
     * @throws java.sql.SQLException
     */
    public void setConnection(Connection connection) throws SQLException {
        new WorkerOperatorNoPassword(connection, tableModel, new WorkerAction() {

            public void runFirst() {
            }

            public void runLast() {
            }
        }).execute();
    }

    private void initActions() {
        textCari.getDocument().addDocumentListener(new DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                filterTable(textCari.getText());
            }

            public void removeUpdate(DocumentEvent e) {
                filterTable(textCari.getText());
            }

            public void changedUpdate(DocumentEvent e) {
                filterTable(textCari.getText());
            }
        });
    }

    @SuppressWarnings("unchecked")
    public void filterTable(String text) {
        if (text.trim().equals("")) {
            ((TableRowSorter<TableModel>) table.getRowSorter()).setRowFilter(null);
        } else {
            ((TableRowSorter<TableModel>) table.getRowSorter()).setRowFilter(RowFilter.regexFilter(text));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usu.rental.film.widget.Label label2 = new usu.rental.film.widget.Label();
        usu.rental.film.widget.ScrollPane scrollPane1 = new usu.rental.film.widget.ScrollPane();
        table = new usu.rental.film.widget.Table();
        usu.rental.film.widget.Label label3 = new usu.rental.film.widget.Label();
        textCari = new usu.rental.film.widget.TextBox();
        usu.rental.film.widget.Label label4 = new usu.rental.film.widget.Label();
        textJudul = new usu.rental.film.widget.TextBox();
        usu.rental.film.widget.Label label5 = new usu.rental.film.widget.Label();
        usu.rental.film.widget.ScrollPane scrollPane2 = new usu.rental.film.widget.ScrollPane();
        textPesan = new usu.rental.film.widget.TextArea();
        buttonKirim = new usu.rental.film.widget.Button();
        buttonBatal = new usu.rental.film.widget.Button();

        setOpaque(false);

        label2.setText("Tujuan");

        scrollPane1.setViewportView(table);

        label3.setDisplayedMnemonic('C');
        label3.setText("cari (case sensitive ) :");

        textCari.setFocusAccelerator('C');

        label4.setDisplayedMnemonic('J');
        label4.setText("judul pesan :");

        textJudul.setFocusAccelerator('J');
        textJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textJudulActionPerformed(evt);
            }
        });

        label5.setDisplayedMnemonic('I');
        label5.setText("isi pesan :");

        textPesan.setColumns(20);
        textPesan.setRows(5);
        textPesan.setFocusAccelerator('I');
        scrollPane2.setViewportView(textPesan);

        buttonKirim.setMnemonic('K');
        buttonKirim.setText("kirim");

        buttonBatal.setMnemonic('B');
        buttonBatal.setText("batal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                    .addComponent(scrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                    .addComponent(textJudul, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textCari, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                    .addComponent(label4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonKirim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonKirim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void textJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textJudulActionPerformed
    textPesan.requestFocusInWindow();
}//GEN-LAST:event_textJudulActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    usu.rental.film.widget.Button buttonBatal;
    usu.rental.film.widget.Button buttonKirim;
    usu.rental.film.widget.Table table;
    usu.rental.film.widget.TextBox textCari;
    usu.rental.film.widget.TextBox textJudul;
    usu.rental.film.widget.TextArea textPesan;
    // End of variables declaration//GEN-END:variables

    private void initFinal() {
        table.setModel(tableModel);

        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(new DefaultTableCellRender());
        }

    }

    public TextBox getTextJudul() {
        return textJudul;
    }

    public TextArea getTextPesan() {
        return textPesan;
    }

    private void initVariables() {
        tableModel = new TableModelOperatorNoPassword();
    }

    public Table getTable() {
        return table;
    }

    public TableModelOperatorNoPassword getTableModel() {
        return tableModel;
    }

    public String getJudul() throws DataNotCompleteException {
        if (textJudul.getText().trim().equals("")) {
            throw new DataNotCompleteException("judul masih kosong");
        }
        return textJudul.getText();
    }

    public String getIsi() throws DataNotCompleteException {
        if (textPesan.getText().trim().equals("")) {
            throw new DataNotCompleteException("isi pesan masih kosong");
        }
        return textPesan.getText();
    }
}
